import{_ as s,c as i,d as o,h as t,s as n,v as r,e as a}from"./index-c758f327.js";const d={},p=e=>(n("data-v-2b990e61"),e=e(),r(),e),l={class:"card"},c=t('<h3 data-v-2b990e61>Documentation</h3><p class="bg-primary border-round p-3" data-v-2b990e61>This page covers the Vite version, for Nuxt 3 visit the <a href="https://github.com/primefaces/sakai-nuxt" class="font-bold bg-primary hover:underline" data-v-2b990e61>sakai-nuxt</a> repository instead.</p><h5 data-v-2b990e61>Getting Started</h5><p data-v-2b990e61> Sakai is an application template for Vue based on the <a href="https://github.com/vuejs/create-vue" class="font-medium text-primary hover:underline" data-v-2b990e61>create-vue</a>, the recommended way to start a <strong data-v-2b990e61>Vite-powered</strong> Vue projects. To get started, clone the <a href="https://github.com/primefaces/sakai-vue" class="font-medium text-primary hover:underline" data-v-2b990e61>repository</a> from GitHub and install the dependencies with npm or yarn. </p><pre class="app-code" data-v-2b990e61><code data-v-2b990e61> npm install </code></pre><p data-v-2b990e61>or</p><pre class="app-code" data-v-2b990e61><code data-v-2b990e61> yarn </code></pre><p data-v-2b990e61>Next step is running the application using the serve script and navigate to <i data-v-2b990e61>http://localhost:5173/</i> to view the application. That is it, you may now start with the development of your application using the Sakai template.</p><pre class="app-code" data-v-2b990e61><code data-v-2b990e61> npm run dev </code></pre><h5 data-v-2b990e61>Structure</h5><p data-v-2b990e61>Sakai consists of a couple folders, demos and layout have been separated so that you can easily remove what is not necessary for your application.</p><ul class="line-height-3" data-v-2b990e61><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>src/layout</span>: Main layout files, needs to be present</li><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>src/views</span>: Demo pages</li><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>public/demo</span>: Assets used in demos</li><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>public/layout</span>: Assets used in layout</li><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>src/assets/demo</span>: Styles used in demos</li><li data-v-2b990e61><span class="text-primary font-medium" data-v-2b990e61>src/assets/layout</span>: SCSS files of the main layout</li></ul><h5 data-v-2b990e61>Menu</h5><p data-v-2b990e61>Main menu is defined at <span class="text-primary font-medium" data-v-2b990e61>src/layout/AppMenu.vue</span> file.</p><h5 data-v-2b990e61>Integration with Existing Vite Applications</h5><p data-v-2b990e61>Only the folders that are related to the layout needs to move in to your project. We&#39;ve created a short tutorial with details.</p>',16),u=p(()=>a("div",{class:"video-container"},[a("iframe",{className:"video",width:"560",height:"315",src:"https://www.youtube.com/embed/AHeSjJFR3ZE",frameborder:"0",allowfullscreen:""})],-1)),b=t(`<h5 data-v-2b990e61>PrimeVue Theme</h5><p data-v-2b990e61>Sakai theming is based on the PrimeVue theme being used. Default theme is <b data-v-2b990e61>lara-light-indigo</b>.</p><h5 data-v-2b990e61>SASS Variables</h5><p data-v-2b990e61>In case you&#39;d like to customize the main layout variables, open <b data-v-2b990e61>_variables.scss</b> file under src/layout folder. Saving the changes will be reflected instantly at your browser.</p><h6 data-v-2b990e61>src/layout/_variables.scss</h6><pre class="app-code" data-v-2b990e61>            
 /* General */
 <br data-v-2b990e61>
 $scale:14px; /* main font size */
 <br data-v-2b990e61>
 $borderRadius:12px; /* border radius of layout element e.g. card, sidebar */
 <br data-v-2b990e61>
 $transitionDuration:.2s; /* transition duration of layout elements e.g. sidebar, overlay menus */
        </pre>`,6),v=[c,u,b];function h(e,m){return i(),o("div",l,v)}const f=s(d,[["render",h],["__scopeId","data-v-2b990e61"]]);export{f as default};
